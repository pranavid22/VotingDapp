let contract;
let signer;

const contractAddress = "0x5FbDB2315678afecb367f032d93F642f64180aa3";
const contractABI = [
    {
        "_format": "hh-sol-artifact-1",
        "contractName": "Voting",
        "sourceName": "contracts/Voting.sol",
        "abi": [
            {
            "inputs": [
                {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
                }
            ],
            "name": "candidates",
            "outputs": [
                {
                "internalType": "string",
                "name": "",
                "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
            },
            {
            "inputs": [],
            "name": "getCandidates",
            "outputs": [
                {
                "internalType": "string[]",
                "name": "",
                "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
            },
            {
            "inputs": [
                {
                "internalType": "uint256",
                "name": "candidateIndex",
                "type": "uint256"
                }
            ],
            "name": "getVotes",
            "outputs": [
                {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
            },
            {
            "inputs": [
                {
                "internalType": "address",
                "name": "",
                "type": "address"
                }
            ],
            "name": "hasVoted",
            "outputs": [
                {
                "internalType": "bool",
                "name": "",
                "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
            },
            {
            "inputs": [
                {
                "internalType": "uint256",
                "name": "candidateIndex",
                "type": "uint256"
                }
            ],
            "name": "vote",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
            },
            {
            "inputs": [
                {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
                }
            ],
            "name": "votes",
            "outputs": [
                {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
            }
        ],
        "bytecode": "0x608060405260405180606001604052806040518060400160405280600581526020017f416c69636500000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f426f62000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600781526020017f436861726c6965000000000000000000000000000000000000000000000000008152508152506000906003620000d0929190620000e5565b50348015620000de57600080fd5b5062000533565b82805482825590600052602060002090810192821562000132579160200282015b82811115620001315782518290816200012091906200044c565b509160200191906001019062000106565b5b50905062000141919062000145565b5090565b5b808211156200016957600081816200015f91906200016d565b5060010162000146565b5090565b5080546200017b906200023b565b6000825580601f106200018f5750620001b0565b601f016020900490600052602060002090810190620001af9190620001b3565b5b50565b5b80821115620001ce576000816000905550600101620001b4565b5090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200025457607f821691505b6020821081036200026a57620002696200020c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002d47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000295565b620002e0868362000295565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200032d620003276200032184620002f8565b62000302565b620002f8565b9050919050565b6000819050919050565b62000349836200030c565b62000361620003588262000334565b848454620002a2565b825550505050565b600090565b6200037862000369565b620003858184846200033e565b505050565b5b81811015620003ad57620003a16000826200036e565b6001810190506200038b565b5050565b601f821115620003fc57620003c68162000270565b620003d18462000285565b81016020851015620003e1578190505b620003f9620003f08562000285565b8301826200038a565b50505b505050565b600082821c905092915050565b6000620004216000198460080262000401565b1980831691505092915050565b60006200043c83836200040e565b9150826002028217905092915050565b6200045782620001d2565b67ffffffffffffffff811115620004735762000472620001dd565b5b6200047f82546200023b565b6200048c828285620003b1565b600060209050601f831160018114620004c45760008415620004af578287015190505b620004bb85826200042e565b8655506200052b565b601f198416620004d48662000270565b60005b82811015620004fe57848901518255600182019150602085019450602081019050620004d7565b868310156200051e57848901516200051a601f8916826200040e565b8355505b6001600288020188555050505b505050505050565b6109ab80620005436000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630121b93f1461006757806306a49fce1461008357806309eef43e146100a15780633477ee2e146100d15780635df8133014610101578063ff98109914610131575b600080fd5b610081600480360381019061007c91906104ce565b610161565b005b61008b6102b9565b604051610098919061064d565b60405180910390f35b6100bb60048036038101906100b691906106cd565b610392565b6040516100c89190610715565b60405180910390f35b6100eb60048036038101906100e691906104ce565b6103b2565b6040516100f8919061077a565b60405180910390f35b61011b600480360381019061011691906104ce565b61045e565b60405161012891906107ab565b60405180910390f35b61014b600480360381019061014691906104ce565b610476565b60405161015891906107ab565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610812565b60405180910390fd5b6000805490508110610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c9061087e565b60405180910390fd5b600160008281526020019081526020016000206000815480929190610259906108cd565b91905055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103895783829060005260206000200180546102fc90610944565b80601f016020809104026020016040519081016040528092919081815260200182805461032890610944565b80156103755780601f1061034a57610100808354040283529160200191610375565b820191906000526020600020905b81548152906001019060200180831161035857829003601f168201915b5050505050815260200190600101906102dd565b50505050905090565b60026020528060005260406000206000915054906101000a900460ff1681565b600081815481106103c257600080fd5b9060005260206000200160009150905080546103dd90610944565b80601f016020809104026020016040519081016040528092919081815260200182805461040990610944565b80156104565780601f1061042b57610100808354040283529160200191610456565b820191906000526020600020905b81548152906001019060200180831161043957829003601f168201915b505050505081565b60016020528060005260406000206000915090505481565b600060016000838152602001908152602001600020549050919050565b600080fd5b6000819050919050565b6104ab81610498565b81146104b657600080fd5b50565b6000813590506104c8816104a2565b92915050565b6000602082840312156104e4576104e3610493565b5b60006104f2848285016104b9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610561578082015181840152602081019050610546565b60008484015250505050565b6000601f19601f8301169050919050565b600061058982610527565b6105938185610532565b93506105a3818560208601610543565b6105ac8161056d565b840191505092915050565b60006105c3838361057e565b905092915050565b6000602082019050919050565b60006105e3826104fb565b6105ed8185610506565b9350836020820285016105ff85610517565b8060005b8581101561063b578484038952815161061c85826105b7565b9450610627836105cb565b925060208a01995050600181019050610603565b50829750879550505050505092915050565b6000602082019050818103600083015261066781846105d8565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069a8261066f565b9050919050565b6106aa8161068f565b81146106b557600080fd5b50565b6000813590506106c7816106a1565b92915050565b6000602082840312156106e3576106e2610493565b5b60006106f1848285016106b8565b91505092915050565b60008115159050919050565b61070f816106fa565b82525050565b600060208201905061072a6000830184610706565b92915050565b600082825260208201905092915050565b600061074c82610527565b6107568185610730565b9350610766818560208601610543565b61076f8161056d565b840191505092915050565b600060208201905081810360008301526107948184610741565b905092915050565b6107a581610498565b82525050565b60006020820190506107c0600083018461079c565b92915050565b7f596f75206861766520616c726561647920766f7465642e000000000000000000600082015250565b60006107fc601783610730565b9150610807826107c6565b602082019050919050565b6000602082019050818103600083015261082b816107ef565b9050919050565b7f496e76616c69642063616e64696461746520696e6465782e0000000000000000600082015250565b6000610868601883610730565b915061087382610832565b602082019050919050565b600060208201905081810360008301526108978161085b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d882610498565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361090a5761090961089e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061095c57607f821691505b60208210810361096f5761096e610915565b5b5091905056fea264697066735822122095f7bc9ea8cf6b7782b5e699c334bf8c783126daadceb53152b1641c01876e3364736f6c63430008120033",
        "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630121b93f1461006757806306a49fce1461008357806309eef43e146100a15780633477ee2e146100d15780635df8133014610101578063ff98109914610131575b600080fd5b610081600480360381019061007c91906104ce565b610161565b005b61008b6102b9565b604051610098919061064d565b60405180910390f35b6100bb60048036038101906100b691906106cd565b610392565b6040516100c89190610715565b60405180910390f35b6100eb60048036038101906100e691906104ce565b6103b2565b6040516100f8919061077a565b60405180910390f35b61011b600480360381019061011691906104ce565b61045e565b60405161012891906107ab565b60405180910390f35b61014b600480360381019061014691906104ce565b610476565b60405161015891906107ab565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156101ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e590610812565b60405180910390fd5b6000805490508110610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c9061087e565b60405180910390fd5b600160008281526020019081526020016000206000815480929190610259906108cd565b91905055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103895783829060005260206000200180546102fc90610944565b80601f016020809104026020016040519081016040528092919081815260200182805461032890610944565b80156103755780601f1061034a57610100808354040283529160200191610375565b820191906000526020600020905b81548152906001019060200180831161035857829003601f168201915b5050505050815260200190600101906102dd565b50505050905090565b60026020528060005260406000206000915054906101000a900460ff1681565b600081815481106103c257600080fd5b9060005260206000200160009150905080546103dd90610944565b80601f016020809104026020016040519081016040528092919081815260200182805461040990610944565b80156104565780601f1061042b57610100808354040283529160200191610456565b820191906000526020600020905b81548152906001019060200180831161043957829003601f168201915b505050505081565b60016020528060005260406000206000915090505481565b600060016000838152602001908152602001600020549050919050565b600080fd5b6000819050919050565b6104ab81610498565b81146104b657600080fd5b50565b6000813590506104c8816104a2565b92915050565b6000602082840312156104e4576104e3610493565b5b60006104f2848285016104b9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610561578082015181840152602081019050610546565b60008484015250505050565b6000601f19601f8301169050919050565b600061058982610527565b6105938185610532565b93506105a3818560208601610543565b6105ac8161056d565b840191505092915050565b60006105c3838361057e565b905092915050565b6000602082019050919050565b60006105e3826104fb565b6105ed8185610506565b9350836020820285016105ff85610517565b8060005b8581101561063b578484038952815161061c85826105b7565b9450610627836105cb565b925060208a01995050600181019050610603565b50829750879550505050505092915050565b6000602082019050818103600083015261066781846105d8565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069a8261066f565b9050919050565b6106aa8161068f565b81146106b557600080fd5b50565b6000813590506106c7816106a1565b92915050565b6000602082840312156106e3576106e2610493565b5b60006106f1848285016106b8565b91505092915050565b60008115159050919050565b61070f816106fa565b82525050565b600060208201905061072a6000830184610706565b92915050565b600082825260208201905092915050565b600061074c82610527565b6107568185610730565b9350610766818560208601610543565b61076f8161056d565b840191505092915050565b600060208201905081810360008301526107948184610741565b905092915050565b6107a581610498565b82525050565b60006020820190506107c0600083018461079c565b92915050565b7f596f75206861766520616c726561647920766f7465642e000000000000000000600082015250565b60006107fc601783610730565b9150610807826107c6565b602082019050919050565b6000602082019050818103600083015261082b816107ef565b9050919050565b7f496e76616c69642063616e64696461746520696e6465782e0000000000000000600082015250565b6000610868601883610730565b915061087382610832565b602082019050919050565b600060208201905081810360008301526108978161085b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d882610498565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361090a5761090961089e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061095c57607f821691505b60208210810361096f5761096e610915565b5b5091905056fea264697066735822122095f7bc9ea8cf6b7782b5e699c334bf8c783126daadceb53152b1641c01876e3364736f6c63430008120033",
        "linkReferences": {},
        "deployedLinkReferences": {}
    }

];

document.getElementById("connectWallet").addEventListener("click", async () => {
  if (window.ethereum) {
    const provider = new ethers.BrowserProvider(window.ethereum);
    await provider.send("eth_requestAccounts", []);
    signer = await provider.getSigner();
    contract = new ethers.Contract(contractAddress, contractABI, signer);
    loadVotes();
  } else {
    alert("MetaMask not found. Please install it.");
  }
});

async function vote(index) {
  if (!contract) return alert("Please connect wallet first.");

  try {
    const tx = await contract.vote(index);
    await tx.wait();
    alert("Vote successful!");
    loadVotes();
  } catch (err) {
    alert("You may have already voted or something went wrong.");
    console.error(err);
  }
}

async function loadVotes() {
  for (let i = 0; i < 3; i++) {
    const voteCount = await contract.getVotes(i);
    document.getElementById(`votes-${i}`).innerText = voteCount;
  }
}